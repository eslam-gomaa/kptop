command:
  name: Pods Info
  description: Kubernetes Pods info of a specific namespace

  variables:
    - name: namespace
      default: .*
      cliArgument:
        enable: true
        short: -n
        required: false
    - name: pvc
      default: .*
      cliArgument:
        enable: true
        short: -pv
        required: false
    - name: pod
      default: .*
      cliArgument:
        enable: true
        short: -po
        required: false

  execute:
    type: advancedTable
    advancedTableColumns:
    - disk capacity:
      metric: |
        sum(kubelet_volume_stats_capacity_bytes{persistentvolumeclaim=~"$pvc", namespace=~"$namespace"}) by (persistentvolumeclaim, namespace, topology_kubernetes_io_zone, kubernetes_io_hostname,  node_kubernetes_io_instance_type)
      metricUnit: byte
      autoConvertValue: true
    - disk used:
      metric: |
        sum(kubelet_volume_stats_used_bytes{persistentvolumeclaim=~"$pvc", namespace=~"$namespace"}) by (persistentvolumeclaim, namespace, topology_kubernetes_io_zone, kubernetes_io_hostname,  node_kubernetes_io_instance_type)
      metricUnit: byte
      autoConvertValue: true
    - disk used %:
      metric: |
        (sum(kubelet_volume_stats_used_bytes{persistentvolumeclaim=~"$pvc", namespace=~"$namespace"}) by (persistentvolumeclaim, namespace, topology_kubernetes_io_zone, kubernetes_io_hostname, node_kubernetes_io_instance_type) /
          sum(kubelet_volume_stats_capacity_bytes{persistentvolumeclaim=~"$pvc", namespace=~"$namespace"}) by (persistentvolumeclaim, namespace, topology_kubernetes_io_zone, kubernetes_io_hostname, node_kubernetes_io_instance_type)) * 100
      metricUnit: percentage
      autoConvertValue: true
    - disk available:
      metric: |
        sum(kubelet_volume_stats_available_bytes{persistentvolumeclaim=~"$pvc", namespace=~"$namespace"}) by (persistentvolumeclaim, namespace, topology_kubernetes_io_zone, kubernetes_io_hostname,  node_kubernetes_io_instance_type)
      metricUnit: byte
      autoConvertValue: true
    - namespace:
      metric: |
        sum(kubelet_volume_stats_capacity_bytes{persistentvolumeclaim=~"$pvc", namespace=~"$namespace"}) by (persistentvolumeclaim, namespace, topology_kubernetes_io_zone, kubernetes_io_hostname,  node_kubernetes_io_instance_type)
      metricUnit: byte
      valueFromLabel: namespace
    - pod:
      metric: |
        sum(kube_pod_spec_volumes_persistentvolumeclaims_info{persistentvolumeclaim=~"$pvc", namespace=~"$namespace", pod=~"$pod"}) by (pod, persistentvolumeclaim, volume)
      metricUnit: byte
      valueFromLabel: pod
    # - node:
    #   metric: |
    #     sum(kubelet_volume_stats_capacity_bytes) by (persistentvolumeclaim, namespace, topology_kubernetes_io_zone, kubernetes_io_hostname,  node_kubernetes_io_instance_type)
    #   metricUnit: byte
    #   valueFromLabel: kubernetes_io_hostname
    - instance type:
      metric: |
        sum(kubelet_volume_stats_capacity_bytes{persistentvolumeclaim=~"$pvc", namespace=~"$namespace"}) by (persistentvolumeclaim, namespace, topology_kubernetes_io_zone, kubernetes_io_hostname,  node_kubernetes_io_instance_type)
      metricUnit: byte
      valueFromLabel: node_kubernetes_io_instance_type
    - AWS Zone:
      metric: |
        sum(kubelet_volume_stats_capacity_bytes{persistentvolumeclaim=~"$pvc", namespace=~"$namespace"}) by (persistentvolumeclaim, namespace, topology_kubernetes_io_zone, kubernetes_io_hostname,  node_kubernetes_io_instance_type)
      metricUnit: byte
      valueFromLabel: topology_kubernetes_io_zone
    - Inodes Usage %:
      metric: |
        sum((kubelet_volume_stats_inodes_used{namespace=~"$namespace", persistentvolumeclaim=~"$pvc"} / (kubelet_volume_stats_inodes_used{namespace=~"$namespace", persistentvolumeclaim=~"$pvc"} + kubelet_volume_stats_inodes_free{namespace=~"$namespace", persistentvolumeclaim=~"$pvc"})) * 100) by (namespace, persistentvolumeclaim)
      metricUnit: percentage
      autoConvertValue: true
    customKey: "ðŸ’¾ {{persistentvolumeclaim}}" # "{{pod}} - {{topology_ebs_csi_aws_com_zone}}"
    advancedTableOptions:
      tableType: simple # https://github.com/astanin/python-tabulate?tab=readme-ov-file#table-format
      headersUppercase: true
      showTableIndex: true
      updateIntervalSeconds: 3
